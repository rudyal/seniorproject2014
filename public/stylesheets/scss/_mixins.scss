@mixin breakpoint($point) {
   @if $point == desktop {
     @media (min-width: 80em) { @content ; }
  }
   @else if $point == laptop {
     @media (max-width: 74em) { @content ; }
  }
    @else if $point == tablet {
     @media (max-width: 58em) { @content ; }
  }
   @else if $point == phablet {
     @media (max-width: 40em) { @content ; }
    // @media (min-width: 27.5em)  { @content ; }
  }
  @else if $point == mobileonly {
     @media (max-width: 27.5em)  { @content ; }

  }
}

$image-path: '/images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

@include keyframes(my-animation) {
  from { opacity: 0; transform: scale(.8); }
}

@include keyframes(fadeIn) {
  0% {
    opacity: 0.0;   
  }
  100% {
    opacity: 1; 
  }   
}
@include keyframes(fadeOut) {
  100% {
    opacity: 1;   
  }
  0% {
    opacity: 0.0; 
  }   
}
@include keyframes(slideLeft) {
  100% { left: 0; } 
}